---
import "@fontsource/poppins"
import "@styles/global.css"
import Header from "@components/Header.astro"
import AboutUs from "@components/AboutUs.astro"
import Services from "@components/Services.astro"
import Portfolio from "@components/Portfolio.astro"
import Team from "@components/Team.astro"
import Footer from "@components/Footer.astro"
import ContactForm from "@components/ContactForm.astro"

const navLinks = [
    {
        name: "About Us",
        path: "#about-us",
    },
    {
        name: "Services",
        path: "#services",
    },
    {
        name: "Portfolio",
        path: "#portfolio",
    },
    {
        name: "Team",
        path: "#team",
    },
]
---

<html lang="en" class="scroll-smooth">
    <head>
        <meta charset="utf-8" />
        <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
        <meta name="viewport" content="width=device-width" />
        <meta name="generator" content={Astro.generator} />
        <title>ErakCode</title>
    </head>
    <body class="bg-background">
        <Header navLinks={navLinks} />
        <AboutUs />
        <Services />
        <Portfolio />
        <Team />
        <ContactForm />
        <Footer navLinks={navLinks} />
        <!-- <script>
import "../scripts/menu.js";
</script> -->
    </body>
</html>

<script>
    document.addEventListener("DOMContentLoaded", () => {
        const sections = document.querySelectorAll("section")
        const navLinks = document.querySelectorAll(".nav-link")

        const observerOptions = {
            root: null,
            threshold: 0.6,
        }

        const observer = new IntersectionObserver((entries) => {
            entries.forEach((entry) => {
                if (entry.isIntersecting) {
                    navLinks.forEach((link) =>
                        link.classList.remove("text-white", "font-bold")
                    )

                    const activeLink = document.querySelector(
                        `.nav-link[href="#${entry.target.id}"]`
                    )
                    if (activeLink)
                        activeLink.classList.add("text-white", "font-bold")
                }
            })
        }, observerOptions)

        sections.forEach((section) => observer.observe(section))
    })
</script>
